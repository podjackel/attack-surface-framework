#!/bin/bash

if test "f$1" "=" "f"
then 
    echo "Error, please specify a JobID"
    exit 1
fi
. /opt/asf/tools/scripts/arguments nuclei $1
DATE_STAMP=`date +"%Y%m%d%H%M%S"`
JOB_FOLDERS="/home/asf/jobs"
JOB_FOLDER="$JOB_FOLDERS/$1"
JOB_OUTPUT_FOLDER="$JOB_FOLDER/$DATE_STAMP"
TERM="xterm"
if ! test -e "$JOB_FOLDER"
then 
    echo "Error, JobID $1 is invalid."
    exit 1
fi
if test -e "JOB_FOLDER/.lock"
then 
	echo "Error, process is already running"
	exit 1
fi
echo > "$JOB_FOLDER/.lock"
cd /opt/asf/frontend/asfui
. bin/activate
python3 /opt/asf/frontend/asfui/manage.py remaster_input --input JobID:$1 --parser url --output "$JOB_FOLDER/app.input"
mkdir -p $JOB_OUTPUT_FOLDER
cp /opt/asf/tools/dicts/default.dict "$JOB_FOLDER/app.dict"
cp /opt/asf/tools/dicts/users.dict "$JOB_FOLDER/app.users"
for mode in input asf dict users
do cp -v "$JOB_FOLDER/app.$mode" "$JOB_OUTPUT_FOLDER/app.$mode"
done
IMAGE_NAME='projectdiscovery/nuclei'
if ! docker images | grep $IMAGE_NAME
then echo "Building nuclei..."
docker build -t m4ch1n3s/nuclei /opt/asf/redteam/nuclei/nuclei-master/
fi
mkdir -p /home/nuclei-templates
chmod 777 /home/nuclei-templates
if ! test -e /home/nuclei-templates/README.md
then
	docker run -i --rm -v $JOB_OUTPUT_FOLDER/:/mnt -v /home/nuclei-templates:/app/nuclei-templates $IMAGE_NAME  -update-templates 2>&1 > "$JOB_OUTPUT_FOLDER/app.log"
fi
#$ARG0-$ARG9
echo docker run --rm -v $JOB_OUTPUT_FOLDER/:/mnt -v /home/nuclei-templates:/app/nuclei-templates $IMAGE_NAME -duc -jsonl -no-color $ARG0 -l /mnt/app.input $ARG1 $ARG2 $ARG3 $ARG4 $ARG5 $ARG6 $ARG7 $ARG8 $ARG9  2>&1 \| tee "$JOB_OUTPUT_FOLDER/app.report.txt" \>\> "$JOB_OUTPUT_FOLDER/app.log" \&
#docker run --rm -v $JOB_OUTPUT_FOLDER/:/mnt -v /home/nuclei-templates:/app/nuclei-templates $IMAGE_NAME -no-color $ARG0 -l /mnt/app.input $ARG1 $ARG2 $ARG3 $ARG4 $ARG5 $ARG6 $ARG7 $ARG8 $ARG9 2>&1 | tee "$JOB_OUTPUT_FOLDER/app.report.txt" >> "$JOB_OUTPUT_FOLDER/app.log" &
docker run --rm -v $JOB_OUTPUT_FOLDER/:/mnt -v /home/nuclei-templates:/app/nuclei-templates $IMAGE_NAME -duc -jsonl -no-color $ARG0 -l /mnt/app.input $ARG1 $ARG2 $ARG3 $ARG4 $ARG5 $ARG6 $ARG7 $ARG8 $ARG9 2>&1 | tee "$JOB_OUTPUT_FOLDER/app.report.txt" |  python3 /opt/asf/frontend/asfui/manage.py remaster_output --parser=nuclei --debug --input="stdin" --output=JobID:$1 >> "$JOB_OUTPUT_FOLDER/app.log" &
JOB_PID=$!
echo $JOB_PID>"$JOB_FOLDER/pid"
wait $PID
#python3 /opt/asf/frontend/asfui/manage.py remaster_output --parser=nuclei.http --debug --input="$JOB_OUTPUT_FOLDER/app.report.txt" --output=JobID:$1
rm -v "$JOB_FOLDER/pid"
rm -v "$JOB_FOLDER/.lock"
